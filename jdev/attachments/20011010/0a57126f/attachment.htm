<tt>
&lt;html&gt;<br>
Hi...&lt;br&gt;&lt;br&gt;<br>
I&nbsp;just&nbsp;released&nbsp;a&nbsp;new&nbsp;version&nbsp;of&nbsp;Muse&nbsp;Jabber&nbsp;API.&amp;nbsp;&nbsp;Hopefully&nbsp;some&nbsp;of<br>
you&nbsp;are&nbsp;willing&nbsp;to&nbsp;try&nbsp;and&nbsp;test&nbsp;it&nbsp;for&nbsp;me..&nbsp;This&nbsp;new&nbsp;release&nbsp;boasts<br>
support&nbsp;for&nbsp;&lt;font&nbsp;face=&quot;Verdana&quot;&gt;XML-RPC&nbsp;and&nbsp;JabberRPC,&nbsp;jabber:iq:time,<br>
jabber:iq:version,&nbsp;jabber:iq:last,&nbsp;jabber:x:delay,&nbsp;jabber:x:roster,<br>
jabber:x:event,&nbsp;and&nbsp;jabber:x:expire.&lt;br&gt;&lt;br&gt;<br>
&lt;a&nbsp;href=&quot;http://www.echomine.org/projects/muse/&quot;&nbsp;eudora=&quot;autourl&quot;&gt;http://www.echomine.org/projects/muse/&lt;/a&gt;&lt;br&gt;&lt;br&gt;<br>
&lt;/font&gt;Aside&nbsp;from&nbsp;my&nbsp;shameless&nbsp;plug&nbsp;for&nbsp;my&nbsp;API,&nbsp;I&nbsp;do&nbsp;have&nbsp;an&nbsp;issue<br>
regarding&nbsp;the&nbsp;0K&nbsp;authentication&nbsp;implementation.&lt;br&gt;&lt;br&gt;<br>
I've&nbsp;been&nbsp;trying&nbsp;to&nbsp;implement&nbsp;0k&nbsp;authentication&nbsp;in&nbsp;Java&nbsp;and&nbsp;I&nbsp;have&nbsp;no&nbsp;yet<br>
gotten&nbsp;it&nbsp;to&nbsp;work..&nbsp;I&nbsp;followed&nbsp;the&nbsp;docs&nbsp;to&nbsp;the&nbsp;dot&nbsp;(and&nbsp;even&nbsp;strayed&nbsp;away<br>
from&nbsp;it&nbsp;just&nbsp;to&nbsp;be&nbsp;adventurous&nbsp;and&nbsp;lucky),&nbsp;but&nbsp;the&nbsp;Hash&nbsp;that&nbsp;I'm<br>
generating&nbsp;still&nbsp;doesn't&nbsp;correspond&nbsp;to&nbsp;the&nbsp;Hash&nbsp;that&nbsp;should&nbsp;be&nbsp;sent&nbsp;to<br>
the&nbsp;server.&lt;br&gt;&lt;br&gt;<br>
I'm&nbsp;rather&nbsp;confused...&nbsp;Not&nbsp;only&nbsp;that,&nbsp;the&nbsp;0k&nbsp;authentication&nbsp;draft<br>
document&nbsp;doesn't&nbsp;specify&nbsp;exactly&nbsp;what&nbsp;the&nbsp;payload&nbsp;looks&nbsp;like&nbsp;to&nbsp;set/reset<br>
the&nbsp;0k&nbsp;authentication.&lt;br&gt;&lt;br&gt;<br>
Here's&nbsp;a&nbsp;snippet&nbsp;of&nbsp;my&nbsp;algorithm&nbsp;code&nbsp;that&nbsp;generates&nbsp;the&nbsp;the&nbsp;hash..&nbsp;any<br>
help&nbsp;is&nbsp;appreciated..&lt;br&gt;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;protected&nbsp;String<br>
getZeroKnowledgePassword(JabberContext&nbsp;context,&nbsp;String&nbsp;zerokToken,&nbsp;int<br>
zerokSeq)&nbsp;{&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//cache&nbsp;hash&nbsp;so&nbsp;no&nbsp;need&nbsp;to&nbsp;go<br>
through&nbsp;calculation&nbsp;again&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;if&nbsp;(hash&nbsp;!=&nbsp;null)&nbsp;return<br>
hash;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//instantiate&nbsp;a&nbsp;SHA1&nbsp;<br>
hash&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;try&nbsp;{&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
MessageDigest&nbsp;md&nbsp;=&nbsp;MessageDigest.getInstance(&amp;quot;SHA&amp;quot;);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//hash<br>
password&nbsp;first&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
md.update(context.getPassword().getBytes());&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;byte[]<br>
hashA&nbsp;=&nbsp;md.digest();&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;//now<br>
hash&nbsp;hashA&nbsp;+&nbsp;zerokToken&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
md.reset();&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
md.update(HexDec.convertBytesToHexString(hashA).toLowerCase().getBytes());&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
md.update(zerokToken.getBytes());&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;byte[]<br>
hash0&nbsp;=&nbsp;md.digest();&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;byte[]<br>
hashSeq&nbsp;=&nbsp;new&nbsp;byte[hash0.length];&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
System.arraycopy(hash0,&nbsp;0,&nbsp;hashSeq,&nbsp;0,&nbsp;hash0.length);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;for<br>
(int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&amp;lt;&nbsp;(zerokSeq&nbsp;-&nbsp;1);&nbsp;i++)&nbsp;{&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
md.reset();&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
//just&nbsp;start&nbsp;hashing&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
hashSeq&nbsp;=&nbsp;md.digest(hashSeq);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;<br>
}&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;<br>
//convert&nbsp;to&nbsp;hex&nbsp;representation&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;hash&nbsp;=<br>
HexDec.convertBytesToHexString(hashSeq);&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&nbsp;catch<br>
(NoSuchAlgorithmException&nbsp;ex)&nbsp;{&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return<br>
&amp;quot;&amp;quot;;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;return&nbsp;hash;&lt;br&gt;<br>
&amp;nbsp;&amp;nbsp;&amp;nbsp;&nbsp;}&lt;br&gt;&lt;br&gt;<br>
&lt;br&gt;<br>
Thanks,&lt;br&gt;<br>
Chris&lt;br&gt;<br>
&lt;x-sigsep&gt;&lt;p&gt;&lt;/x-sigsep&gt;<br>
PGP&nbsp;at&nbsp;ldap://certserver.pgp.com/&lt;br&gt;<br>
&lt;/html&gt;<br>

</tt>
