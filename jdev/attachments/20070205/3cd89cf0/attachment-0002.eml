[From nobody Tue Nov  3 09:37:15 2009
Received: from frida.dreamhost.com (frida.dreamhost.com [::ffff:66.33.206.23])
	by aare.amessage.eu with esmtp; Mon, 05 Feb 2007 02:01:52 +0100
	id 1B0063FC.45C68200.00006AB5
Received-SPF: none (Address does not pass the Sender Policy Framework)
	SPF=MAILFROM; sender=psi-devel-bounces@lists.affinix.com;
	remoteip=::ffff:66.33.206.23; remotehost=frida.dreamhost.com;
	helo=frida.dreamhost.com; receiver=aare.amessage.eu;
Received: from che.dreamhost.com (che.dreamhost.com [66.33.216.23])
	by frida.dreamhost.com (Postfix) with ESMTP
	id 084C216D2F5; Sun,  4 Feb 2007 17:01:21 -0800 (PST)
Received: from che.dreamhost.com (localhost [127.0.0.1])
	by che.dreamhost.com (Postfix) with ESMTP id 2B6201BBF2;
	Sun,  4 Feb 2007 17:01:20 -0800 (PST)
X-Original-To: psi-devel@lists.affinix.com
Received: from aare.amessage.eu (aare.amessage.eu [212.112.238.55])
	by che.dreamhost.com (Postfix) with ESMTP id 0CB3E1BB4D
	for &lt;psi-devel@lists.affinix.com&gt;; Sun,  4 Feb 2007 17:01:16 -0800 (PST)
Received: from [IPv6:2001:6f8:134f:0:213:ceff:fe01:3e4e] (quaoar.amessage.eu
	[2001:6f8:134f:0:213:ceff:fe01:3e4e])
	(AUTH: CRAM-MD5 m@tthias.eu, TLS: TLSv1/SSLv3,256bits,AES256-SHA)
	by aare.amessage.eu with esmtp; Mon, 05 Feb 2007 02:01:13 +0100
	id 1B0063FC.45C681D9.00006A9C
Message-ID: &lt;45C681D9.3060300@tthias.eu&gt;
Date: Mon, 05 Feb 2007 02:01:13 +0100
From: Matthias Wimmer &lt;m@tthias.eu&gt;
User-Agent: Thunderbird 1.5.0.9 (X11/20070103)
MIME-Version: 1.0
To: Psi Development &lt;psi-devel@lists.affinix.com&gt;
References: &lt;20070204182239.GA31029@neutronstar.dyndns.org&gt;	&lt;eq5f4q$jvo$1@sea.gmane.org&gt;
	&lt;133fd4c60702041302m2e66d26w1a2ab8fedc998704@mail.gmail.com&gt;
In-Reply-To: &lt;133fd4c60702041302m2e66d26w1a2ab8fedc998704@mail.gmail.com&gt;
Subject: Re: [Psi-devel] Some login/sasl questions for 0.11
X-BeenThere: psi-devel@lists.affinix.com
X-Mailman-Version: 2.1.9
Precedence: list
Reply-To: Psi Development &lt;psi-devel@lists.affinix.com&gt;
List-Id: Psi Development &lt;psi-devel-affinix.com&gt;
List-Unsubscribe: &lt;http://lists.affinix.com/listinfo.cgi/psi-devel-affinix.com&gt;, 
	&lt;mailto:psi-devel-request@lists.affinix.com?subject=unsubscribe&gt;
List-Archive: &lt;http://lists.affinix.com/pipermail/psi-devel-affinix.com&gt;
List-Post: &lt;mailto:psi-devel@lists.affinix.com&gt;
List-Help: &lt;mailto:psi-devel-request@lists.affinix.com?subject=help&gt;
List-Subscribe: &lt;http://lists.affinix.com/listinfo.cgi/psi-devel-affinix.com&gt;, 
	&lt;mailto:psi-devel-request@lists.affinix.com?subject=subscribe&gt;
Content-Type: text/plain; charset=&quot;us-ascii&quot;
Content-Transfer-Encoding: 7bit
Sender: psi-devel-bounces@lists.affinix.com
Errors-To: psi-devel-bounces@lists.affinix.com
Received-SPF: fail (Address does not pass the Sender Policy Framework)
	SPF=FROM; sender=m@tthias.eu; remoteip=::ffff:66.33.206.23;
	remotehost=frida.dreamhost.com; helo=frida.dreamhost.com;
	receiver=aare.amessage.eu;
X-Bogosity: Unsure, tests=bogofilter, spamicity=0.500000, version=1.1.1

Sorry I already deleted the posting I am replying.

Concerning the question if establishing a SASL encryption layer should 
be supported inside a connection, that is already protected by a TLS layer:

I think that a SASL encryption layer inside a TLS layer should be supported:
One reason for this would be a server, that wants to be sure, that it is 
really the user, that is on the other side of the connection and there 
is no man-in-the-middle attack taking place. The server cannot relay on 
the TLS layer for this as long as the client does not present its own 
certificate! This is because he does not know if the TLS layer has been 
established by the client at all (or just by the man in the middle which 
told the client that TLS support is not available by the server or the 
client got offered TLS but did not check the certificate).
A auth-conf layer is the only currently available solution for a server 
to know, that there is a secure connection to the client if client 
certificates are not used. Note that even not auth-int is enough for a 
server to know this, as the TLS layer is established before the 
connection is protected by the SASL integrity layer and therefore TLS 
could have been established by the man in the middle before doing SASL 
and telling the Jabber client that TLS is not available. The connection 
is then only protected against the man in the middle injecting or 
removing stanzas, but not from being watched by this man in the middle.



Tot kijk
     Matthias
_______________________________________________
psi-devel mailing list
psi-devel@lists.affinix.com
http://lists.affinix.com/listinfo.cgi/psi-devel-affinix.com
]